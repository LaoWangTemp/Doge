name: build

on:
  workflow_call:
    inputs:
      path:
        default: 'pubspec.yaml'
        required: true
        type: string
      target:
        required: true
        type: string
        description: "Build target (android, ios, linux, macos, windows, web)"
      build-args:
        required: true
        type: string
        description: "Flutter Building Args"
      platform:
        required: true
        type: string
        description: "Running Platform"


jobs:
  ready:
    uses: ./.github/workflows/get-info.yml
    with:
      path: ${{ inputs.path }}
      target: ${{ inputs.target }}

  pkcs12:
    uses: ./.github/workflows/create-pfx.yml
    secrets: inherit

  build:
    runs-on: ${{ inputs.platform }}
    needs:
      - ready
      - pkcs12
    steps:
      - uses: actions/checkout@v4
      - if: ${{ inputs.target == 'linux' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
        shell: bash
      - if: ${{ inputs.target == 'windows' }}
        run: |
          choco install yq
          Invoke-WebRequest -Uri "https://github.com/Delphier/SignTool/releases/download/v10.0.22621.6/SignTool-10.0.22621.6-x64.zip" -OutFile "SignTool.zip"
          Expand-Archive -Path "SignTool.zip" -DestinationPath "SignTool" -Force
      -
        name: Set up Flutter
        uses: subosito/flutter-action@v2.18.0
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
      -
        run: flutter --version
      -
        run: flutter pub get
      -
        run: flutter test
      -
        run: flutter ${{ inputs.build-args }}
      -
        run: echo "${{ needs.pkcs12.outputs.pfx-base64 }}" | base64 -d > signingCert.pfx
        shell: bash
      - if: ${{ inputs.target != 'windows' }}
        run: |
          RELEASE_NAME="${{ needs.ready.outputs.name_lower }}"
          PREFIX="${{ needs.ready.outputs.release }}"
          BIN="$RELEASE_NAME-${{ needs.ready.outputs.version }}-${{ inputs.target }}.zip"

          echo $RELEASE_NAME
          echo $PREFIX
          echo $BIN
        shell: bash
      - if: ${{ inputs.target == 'windows' }}
        run: |
          $zip = "${{ needs.ready.outputs.name_full }}-${{ needs.ready.outputs.version }}-${{ inputs.target }}.zip"
          $raw = "${{ needs.ready.outputs.release }}/${{ needs.ready.outputs.name_lower }}.exe"
          $bin = "${{ needs.ready.outputs.release }}/${{ needs.ready.outputs.name_full }}.exe"

          Move-Item -Path "$raw" "$bin"
          ./SignTool/signtool.exe sign /fd SHA256 /td SHA256 /tr http://timestamp.digicert.com /a /f signingCert.pfx /p "${{ secrets.WINDOWS_PFX_PASSWD }}" "$bin"

          cd (Split-Path -Path "${{ needs.ready.outputs.release }}" -Parent)
          Move-Item -Path "Release" -Destination "${{ needs.ready.outputs.name_full }}"
          Compress-Archive -Path "${{ needs.ready.outputs.name_full }}" -DestinationPath $zip -CompressionLevel Optimal
          gh release upload "${{ needs.ready.outputs.version }}" $zip --clobber
        shell: pwsh
        name: Upload(windows zip)